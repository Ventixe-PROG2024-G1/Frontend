@model Frontend.Models.Event.ViewModels.EventIndexPageViewModel
@{
    ViewData["Title"] = "Events";
}

<div>
    <h1>@ViewData["Title"]</h1>

    <form asp-action="Index" method="get" style="display: flex; flex-wrap: wrap; gap: 1rem; align-items: flex-end; margin-bottom: 2rem;">
        <div class="form-group">
            <label asp-for="CurrentCategoryId" class="form-label">Category</label>
            <select asp-for="CurrentCategoryId" asp-items="Model.CategoryFilterOptions" class="form-input"></select>
        </div>

        <div class="form-group">
            <label asp-for="CurrentStatusName" class="form-label">Status</label>
            <select asp-for="CurrentStatusName" class="form-input">
                <option value="">All Statuses</option>
                @foreach (var status in Model.StatusFilterOptions.OrderBy(s => s.Name))
                {
                    <option value="@status.Name" selected="@(Model.CurrentStatusName == status.Name)">@status.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label asp-for="CurrentDateFilter" class="form-label">Date</label>
            <select asp-for="CurrentDateFilter" asp-items="Model.DateFilterOptions" class="form-input"></select>
        </div>

        <div class="form-group">
            <label asp-for="CurrentSearchTerm" class="form-label">Sök</label>
            <input asp-for="CurrentSearchTerm" class="form-input" placeholder="Sök events..." />
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary" style="width: auto;">Filter</button>
            <a asp-action="Index" class="btn" style="width: auto; margin-left: 0.5rem;">Clear</a>
        </div>
    </form>

    @if (!Model.Events.Any())
    {
        <div class="card" style="margin-top: 2rem;">
            <div class="card-body" style="text-align: center;">
                <p>No events found matching your criteria.</p>
            </div>
        </div>
    }
    else
    {
        <div class="events" id="events">
            @foreach (var eventItem in Model.Events)
            {
                <a href="@Url.Action("Index", "EventDetails", new { eventId = eventItem.EventId })" class="event-card-link">
                    <div class="event-card">
                        <div class="event-card-header" style="@(!string.IsNullOrEmpty(eventItem.ThumbnailUrl) ? $"background-image: url(\"{Html.Encode(eventItem.ThumbnailUrl)}\"); background-size: cover; background-position: center; background-repeat: no-repeat;" : "")">
                            @if (!string.IsNullOrEmpty(eventItem.CategoryName))
                            {
                                <span>@eventItem.CategoryName</span>
                            }
                            @if (!string.IsNullOrEmpty(eventItem.StatusName))
                            {
                                <span>@eventItem.StatusName</span>
                            }
                        </div>
                        <div class="event-card-body">
                            <p>@eventItem.FormattedEventDate @eventItem.FormattedEventTime</p>
                            <h2>@eventItem.EventName</h2>
                            @if (!string.IsNullOrEmpty(eventItem.Location))
                            {
                                <div class="additional-info" style="padding-left:0; padding-right:0;">
                                    <p>@eventItem.Location</p>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(eventItem.ShortDescription))
                            {
                                <p><em>@eventItem.ShortDescription</em></p>
                            }
                        </div>
                        <div class="event-card-footer">
                            <div>
                                @if (eventItem.MaxAttendees > 0)
                                {
                                    <div class="event-card-colorpercent" style="background: linear-gradient(90deg, var(--primary-100) @(eventItem.TicketSalesPercentage.ToString("0.##", System.Globalization.CultureInfo.InvariantCulture))%, var(--primary-50) @(eventItem.TicketSalesPercentage.ToString("0.##", System.Globalization.CultureInfo.InvariantCulture))%, var(--primary-50) 100%);"></div>
                                    <h3>@($"{eventItem.TicketSalesPercentage:F0}%")</h3>
                                }
                                else
                                {
                                    <div class="event-card-colorpercent" style="background: var(--grey-30);"></div>
                                    <h3>N/A</h3>
                                }
                            </div>
                            <h2>@eventItem.FormattedPrice</h2>
                        </div>
                    </div>
                </a>
            }
        </div>

        <div style="display: flex; justify-content: center; gap: 0.5rem; margin-top: 2rem; flex-wrap: wrap;">
            @if (Model.HasPreviousPage)
            {
                <a asp-action="Index"
                   asp-route-pageNumber="@(Model.PageNumber - 1)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-currentCategoryId="@Model.CurrentCategoryId"
                   asp-route-currentStatusName="@Model.CurrentStatusName"
                   asp-route-currentDateFilter="@Model.CurrentDateFilter"
                   asp-route-currentSearchTerm="@Model.CurrentSearchTerm" class="btn">Previous</a>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <a asp-action="Index"
                   asp-route-pageNumber="@i"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-currentCategoryId="@Model.CurrentCategoryId"
                   asp-route-currentStatusName="@Model.CurrentStatusName"
                   asp-route-currentDateFilter="@Model.CurrentDateFilter"
                   asp-route-currentSearchTerm="@Model.CurrentSearchTerm" class="btn @(i == Model.PageNumber ? "btn-primary" : "")">@i</a>
            }

            @if (Model.HasNextPage)
            {
                <a asp-action="Index"
                   asp-route-pageNumber="@(Model.PageNumber + 1)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-currentCategoryId="@Model.CurrentCategoryId"
                   asp-route-currentStatusName="@Model.CurrentStatusName"
                   asp-route-currentDateFilter="@Model.CurrentDateFilter"
                   asp-route-currentSearchTerm="@Model.CurrentSearchTerm" class="btn">Next</a>
            }
        </div>
    }
</div>